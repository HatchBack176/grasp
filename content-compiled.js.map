{"version":3,"sources":["content.js"],"names":[],"mappings":"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","file":"content-compiled.js","sourcesContent":["\"use strict\";\n\nvar MOUSE = new THREE.Vector3(0, 0, 0), OFFSET = new THREE.Vector2(0, 0);\nvar EDITOR_WIDTH = 400 + 3, NAVBAR_HEIGHT = 64 + 3;\nvar LEVEL_SPACING = 256, ARG_ELEVATION = 1, ARG_SPACING = 20, INPUT_RADIUS = 5, OUTPUT_RADIUS = 5;\nvar DRAG_OBJECT;\n\nvar COLORS = {\n    green: 0x119955,\n    white: 0xffffff,\n    blue: 0x113355,\n    highlight: 0xffff00\n};\n\nclass GRASPObject {\n    constructor(geometry, material) {\n        this.local_index = null;\n        this.meshes = {};\n        this.children = {};\n        if (geometry && material) {\n            this.mesh = new THREE.Mesh(geometry, material);\n            this.mesh.object = this;\n        }\n        this.parent = null;\n    }\n    add(object, local_index) {\n        this.mesh.add(object.mesh);\n        object.parent = this;\n        let first = true;\n        for (let proto = object.__proto__; proto; proto = proto.__proto__) {\n            let type = proto.constructor.name;\n            if (this.children[type]) {\n                if (first) {\n                    local_index = local_index || this.children[type].length;\n                    this.children[type].splice(local_index, 0, object);\n                    for (let j = local_index; j < this.children[type].length; j++) this.children[type][j].local_index = j;\n                }\n                else this.children[type].push(object);\n            }\n            else {\n                this.children[type] = [object];\n                if (first) object.local_index = 0;\n            }\n            object.mesh.traverseAncestors(function(mesh) {\n                if (mesh.object.meshes[type]) mesh.object.meshes[type].push(object.mesh);\n                else mesh.object.meshes[type] = [object.mesh];\n            });\n            first = false;\n        }\n        object.mesh.traverseAncestors(function(mesh) {\n            for (let type in object.meshes) if (object.meshes.hasOwnProperty(type)) {\n                //if (mesh.object.meshes[type]) mesh.object.meshes[type] = [...object.meshes[type]];\n                if (mesh.object.meshes[type]) mesh.object.meshes[type] = mesh.object.meshes[type].concat(object.meshes[type]);\n                else mesh.object.meshes[type] = object.meshes[type].slice();\n            }\n        });\n        return object;\n    }\n    remove() {\n        // remove children\n        for (let type in this.children) if (this.children.hasOwnProperty(type))\n            this.children[type].forEach(function(object) {object.remove();});\n        for (let proto = this.__proto__; proto; proto = proto.__proto__) {\n            let type = proto.constructor.name;\n            // update parent's .children[type] list\n            let siblings = this.parent.children[type];\n            siblings.splice(this.local_index, 1);\n            // update siblings' indices\n            for (let j = this.local_index; j < siblings.length; j++) siblings[j].local_index = j;\n            // update all ancestor's .meshes[type] lists\n            let m = this.mesh;\n            this.mesh.traverseAncestors(function(mesh) {\n                let index = mesh.object.meshes[type].indexOf(m);\n                if (index > -1) mesh.object.meshes[type].splice(index, 1);\n            });\n        }\n        // remove self\n        this.mesh.geometry.dispose();\n        if (this.mesh.parent) this.mesh.parent.remove(this.mesh);\n        // return parent for easy chaining\n        return this.parent;\n    }\n    getAbsolutePosition() {\n        let position = new THREE.Vector3(0, 0, 0);\n        let current = this;\n        while (current.parent) {\n            position.add(current.position);\n            current = current.parent;\n        }\n        return position;\n    }\n    setColor(hex) { this.mesh.material.color.setHex(hex); }\n    setPosition(x, y, z) { this.mesh.position.set(x, y, z); }\n    set position(v) { this.setPosition(v.x, v.y, v.z); }\n    get position() { return this.mesh.position; }\n    get type() {return this.constructor.name; }\n}\n\nclass Scene extends GRASPObject {\n    constructor() {\n        super();\n        //this.type = 'Scene';\n        this.mesh = new THREE.Scene();\n        this.mesh.object = this;\n        this.mesh.fog = new THREE.FogExp2(0xcccccc, 0.001);\n        this.renderer = new THREE.WebGLRenderer();\n        this.renderer.setClearColor(this.mesh.fog.color);\n        this.width = window.innerWidth - EDITOR_WIDTH;\n        this.height = window.innerHeight - NAVBAR_HEIGHT;\n        this.renderer.setSize(this.width, this.height);\n        this.renderer.setPixelRatio(this.width / this.height);\n        this.container = document.getElementById('content');\n        this.container.appendChild(this.renderer.domElement);\n        this.camera = new THREE.PerspectiveCamera(60, this.width / this.height, 50, 10000);\n        this.camera.position.z = 500;\n\n        this.controls = new THREE.TrackballControls(this.camera);\n        this.controls.noZoom = false;\n        this.controls.noPan = false;\n\n        this.raycaster = new THREE.Raycaster();\n\n        let scene = this;\n\n        // mouse and resize listeners\n        window.addEventListener('resize', function () {\n            scene.width = window.innerWidth - EDITOR_WIDTH;\n            scene.height = window.innerHeight - NAVBAR_HEIGHT;\n            scene.camera.aspect = scene.width / scene.height;\n            scene.camera.updateProjectionMatrix();\n            scene.renderer.setSize(scene.width, scene.height);\n        }, false);\n        this.container.addEventListener(\"touchstart\", onTouchStart, false);\n        this.container.addEventListener(\"touchend\", onTouchEnd, false);\n        this.container.addEventListener(\"touchcancel\", onTouchCancel, false);\n        this.container.addEventListener(\"touchmove\", onTouchMove, false);\n        this.container.addEventListener('mouseup', onMouseUp, false);\n        this.container.addEventListener('mousemove', onMouseMove, false);\n        this.container.addEventListener('mousedown', onMouseDown, false);\n        this.container.addEventListener('mousewheel', onMouseScroll, false );\n\n        // light\n        let light = new THREE.DirectionalLight(0xffffff, 1);\n        light.position.set(0.2, 0.2, 1);\n        light.castShadow = true;\n        light.shadowMapWidth = 2048;\n        light.shadowMapHeight = 2048;\n        let d = 50;\n        light.shadowCameraLeft = -d;\n        light.shadowCameraRight = d;\n        light.shadowCameraTop = d;\n        light.shadowCameraBottom = -d;\n        light.shadowCameraFar = 3500;\n        light.shadowBias = -0.0001;\n        light.shadowDarkness = 1;\n        this.mesh.add(light);\n        return this;\n    }\n    remove() {\n        // remove everything\n        while (this.mesh.children.length > 1) this.mesh.children[this.mesh.children.length - 1].object.remove();\n        delete this.meshes;\n        this.meshes = [];\n        delete this.children;\n        this.children = [];\n    }\n    addPlane(index) {\n        let plane = this.add(new Plane(), index);\n        this.children.Plane.forEach(function(plane) { plane.setPosition(0, 0, LEVEL_SPACING * plane.local_index); });\n        return plane;\n    }\n    addEdge(start, end) {\n        let edge = this.add(new Edge(start, end));\n        start.parent.parent.edges.push(edge);\n        end.parent.parent.edges.push(edge);\n        return edge;\n    }\n}\n\nclass Plane extends GRASPObject {\n    constructor(width, height) {\n        width = width || 1000;\n        height = height || 1000;\n        let geometry = new THREE.PlaneGeometry(width, height, 1, 1);\n        geometry.dynamic = true;\n        let material =  new THREE.MeshBasicMaterial({visible: false});\n\n        super(geometry, material);\n        //this.type = 'Plane';\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    setSize(width, height) {\n        let g = this.mesh.geometry;\n        geometry.vertices.forEach(function(vertex) {\n            vertex.x = (vertex.x < 0 ? -1 : 1) * width / 2;\n            vertex.y = (vertex.y < 0 ? -1 : 1) * height / 2;\n        });\n        g.verticesNeedUpdate = true;\n        g.normalsNeedUpdate = true;\n        g.computeFaceNormals();\n        g.computeVertexNormals();\n        g.computeBoundingSphere();\n        this.width = width;\n        this.height = height;\n    }\n    extend(top, right, bottom, left) {\n        this.setSize(this.width + left + right, this.height + top + bottom);\n        for (let i = 0; i < this.mesh.children.length; i++) {\n            let child = this.mesh.children[i];\n            let shiftX = (left - right) / 2;\n            let shiftY = (bottom - top) / 2;\n            child.position.x += shiftX;\n            child.position.y += shiftY;\n        }\n    }\n}\n\nclass Scope extends GRASPObject {\n    constructor(level, width, height) {\n        level = level || 0;\n        width = width || 200;\n        height = height || 200;\n        let points = [\n            new THREE.Vector2(- 0.5 * width, - 0.5 * height),\n            new THREE.Vector2(- 0.5 * width, 0.5 * height),\n            new THREE.Vector2(0.5 * width, 0.5 * height),\n            new THREE.Vector2(0.5 * width, - 0.5 * height)\n        ];\n        let geometry = new THREE.ExtrudeGeometry(new THREE.Shape(points), {amount: 1, bevelEnabled: false, steps: 1});\n        geometry.dynamic = true;\n        let material = new THREE.MeshPhongMaterial({color: COLORS.white, shading: THREE.FlatShading, transparent: true, opacity: 0.5});\n        super(geometry, material);\n        //this.type = 'Scope';\n        this.width = width;\n        this.height = height;\n        this.level = level;\n        this.setSize(200, 200);\n        this.scope = {};\n        this.parent_scope = null;\n        this.edges = [];\n        return this;\n    }\n    setSize(width, height) {\n        let g = this.mesh.geometry;\n        g.vertices.forEach(function(vertex) {\n            vertex.x = (vertex.x < 0 ? -1 : 1) * width / 2;\n            vertex.y = (vertex.y < 0 ? -1 : 1) * height / 2;\n        });\n        g.verticesNeedUpdate = true;\n        g.normalsNeedUpdate = true;\n        g.computeFaceNormals();\n        g.computeVertexNormals();\n        g.computeBoundingSphere();\n        this.width = width;\n        this.height = height;\n    }\n    extend(top, right, bottom, left) {\n        this.setSize(this.width + left + right, this.height + top + bottom);\n        let position = this.position;\n        this.setPosition(position.x + ((right - left) / 2), position.y + ((top - bottom) / 2), 0);\n        for (let i = 0; i < this.mesh.children.length; i++) {\n            let child = this.mesh.children[i];\n            let shiftX = (left - right) / 2;\n            let shiftY = (bottom - top) / 2;\n            child.position.x += shiftX;\n            child.position.y += shiftY;\n        }\n    }\n    addScope() {\n        let plane = this.parent;\n        if (plane) {\n            let level = plane.local_index;\n            if (level == this.level) {\n                let new_plane = SCENE.children.Plane[level + 1] || SCENE.addPlane();\n                let new_scope = new_plane.add(new Scope(level + 1));\n                new_scope.parent_scope = this;\n                return new_scope;\n            }\n            else console.error('levels don\\'t match', level, this.level);\n        }\n        else console.error('scope does not have parent');\n    }\n    addEdge(start, end) {\n        return this.add(new Edge(start, end));\n    }\n    updateEdges() {\n        for (let i = 0; i < this.edges.length; i++) this.edges[i].update();\n    }\n    findBinding(label) {\n        for (let scope = this; scope; scope = scope.parent_scope)\n            if (scope.scope[label]) return scope.scope[label];\n        return null;\n    }\n    addVariable(name) {\n        let variable = this.add(new Variable(name));\n        this.scope[name] = variable;\n        return variable;\n    }\n    addForm(name) {\n        let form = this.add(new Form());\n        if (name) form.addInput(name, COLORS.blue);\n        return form;\n    }\n}\n\nclass Node extends GRASPObject {\n    constructor() {\n        let width = 20;\n        let height = 25;\n        let points = [\n            new THREE.Vector2(- 0.5 * width, - 0.5 * height),\n            new THREE.Vector2(- 0.5 * width, 0.5 * height),\n            new THREE.Vector2(0.5 * width, 0.5 * height),\n            new THREE.Vector2(0.5 * width, - 0.5 * height)\n        ];\n        let geometry = new THREE.ExtrudeGeometry(new THREE.Shape(points), {amount: 5, bevelEnabled: false, steps: 1});\n        geometry.dynamic = true;\n        let material = new THREE.MeshPhongMaterial({shading: THREE.FlatShading});\n        super(geometry, material);\n        //this.type = 'Node';\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    setSize(width, height) {\n        let g = this.mesh.geometry;\n        g.vertices.forEach(function(vertex) {\n            vertex.x = (vertex.x < 0 ? -1 : 1) * width / 2;\n            vertex.y = (vertex.y < 0 ? -1 : 1) * height / 2;\n        });\n        g.verticesNeedUpdate = true;\n        g.normalsNeedUpdate = true;\n        g.computeFaceNormals();\n        g.computeVertexNormals();\n        g.computeBoundingSphere();\n        this.width = width;\n        this.height = height;\n    }\n    updateEdges() {\n        if (this.children.Input) this.children.Input.forEach(function(input) { if (input.edge) input.edge.update(); });\n        if (this.children.Output) this.children.Output.forEach(function(output) { if (output.edge) output.edge.update(); });\n    }\n    addInput(label, color, radius, index) {\n        radius = radius || INPUT_RADIUS;\n        let scope = this.parent;\n        let input;\n        if (label && scope) {\n            let value = scope.findBinding(label);\n            if (value) {\n                let real_label = null;\n                if (document.getElementById('labels').checked) real_label = label;\n                input = this.add(new Input(real_label, color, radius), index);\n                if (scope.scope[label]) scope.addEdge(value.addOutput(), input, COLORS.blue).update();\n                else SCENE.addEdge(value.addOutput(), input, COLORS.blue).update();\n            }\n            else input = this.add(new Input(label, color, radius), index);\n        }\n        else input = this.add(new Input(null, color, radius), index);\n        if (this.updateSize) this.updateSize();\n        return input;\n    }\n    addOutput(index) {\n        let output = new Output();\n        this.add(output, index);\n        if (this.updateSize) this.updateSize();\n        if (this.type == 'Variable') output.setColor(COLORS.blue);\n        return output;\n    }\n}\n\nclass Form extends Node {\n    constructor() {\n        super();\n        //this.type = 'Form';\n        this.setColor(COLORS.green);\n        this.output = this.add(new Output());\n        this.output.setPosition(0, - this.height / 2, ARG_ELEVATION);\n        return this;\n    }\n    updateSize() {\n        if (this.children.Input) {\n            let input_width = 0;\n            let length = this.children.Input.length;\n            for (let i = 1; i < length; i++) input_width += this.children.Input[i].width + ARG_SPACING + this.children.Input[i].radius;\n            let first = this.children.Input[0];\n            let width = Math.max(this.height, first.width + ARG_SPACING, input_width);\n            // position function reference\n            first.setPosition(-width / 2, 0, ARG_ELEVATION);\n            // position function args\n            let position = - (width / 2) - INPUT_RADIUS;\n            for (let i = 1; i < length; i++) {\n                let input = this.children.Input[i];\n                input.setPosition(position + ((ARG_SPACING + input.radius) / 2), this.height / 2, ARG_ELEVATION);\n                position += ARG_SPACING + input.width + input.radius;\n            }\n            this.setSize(width, this.height);\n        }\n        else console.error('form has no inputs');\n        // position return output if it exists\n        if (this.children.Output && this.children.Output.length > 1)\n            this.children.Output[1].setPosition(this.width / 2, 0, ARG_ELEVATION);\n    }\n}\n\nclass Variable extends Node {\n    constructor(name) {\n        super();\n        //this.type = 'Variable';\n        this.setColor(COLORS.blue);\n        this.name = name;\n        this.label = this.add(new Text(name, 10, 5.1));\n        this.updateSize();\n        return this;\n    }\n    setName(name) {\n        if (this.parent && this.parent.scope) {\n            this.parent.scope[this.name] = null;\n            this.parent.scope[name] = this;\n        }\n        this.label.remove();\n        this.label = this.add(new Text(name));\n        this.name = name;\n        this.updateSize();\n    }\n    updateSize() {\n        let text_width = this.label.width;\n        let input_width = 0;\n        if (this.children.Input) for (let i = 0; i < this.children.Input.length; i++)\n            input_width += this.children.Input[i].width + ARG_SPACING;\n        let output_length = this.children.Output ? this.children.Output.length : 0;\n        let output_width = ARG_SPACING * output_length;\n        let width = Math.max(this.height, output_width, input_width, text_width);\n        let position = - width / 2;\n        // position variable inputs\n        if (this.children.Input) for (let i = 0; i < this.children.Input.length; i++) {\n            let input = this.children.Input[i];\n            input.setPosition(position + (ARG_SPACING / 2), this.height / 2, ARG_ELEVATION);\n            if (input.edge) input.edge.update();\n            position += ARG_SPACING + input.width;\n        }\n        let output_spacing = width / output_length;\n        // position variable outputs\n        if (this.children.Output) for (let i = 0; i < this.children.Output.length; i++) {\n            let output = this.children.Output[i];\n            output.setPosition((i * output_spacing) - (width / 2) + (output_spacing / 2), - this.height / 2, ARG_ELEVATION);\n            if (output.edge) output.edge.update();\n        }\n        this.setSize(width, this.height);\n    }\n}\n\nclass Edge extends GRASPObject {\n    constructor(start, end, color) {\n        color = color || COLORS.green;\n        let getCurve = THREE.Curve.create(function () { }, function (t) { return new THREE.Vector3(0, t, 0); });\n        let geometry = new THREE.TubeGeometry(new getCurve(), 8, 2, 8, true);\n        let material = new THREE.MeshPhongMaterial({shading: THREE.FlatShading, color: color});\n        super(geometry, material);\n        //this.type = 'Edge';\n        if (start.edge) console.error('start.edge already exists');\n        if (end.edge) console.error('end.edge already exists');\n        this.start = start;\n        this.end = end;\n        start.edge = this;\n        end.edge = this;\n        this.update();\n        return this;\n    }\n    update() {\n        let direction, length, start, end, axis, angle;\n        if (this.parent && this.parent.type == 'Scene') {\n            start = this.start.getAbsolutePosition();\n            end = this.end.getAbsolutePosition();\n            this.setPosition(start.x, start.y, start.z);\n            this.mesh.rotation.z = 0;\n            this.mesh.rotation.y = 0;\n            this.mesh.rotation.x = 0;\n            length = start.distanceTo(end);\n            this.length = length;\n            this.mesh.scale.set(1, length * 1.15, 1);\n            let yaxis = new THREE.Vector3(0, 1, 0);\n            axis = new THREE.Vector3().subVectors(end, start);\n            angle = yaxis.angleTo(axis);\n            axis.cross(yaxis).normalize();\n            this.mesh.rotateOnAxis(axis, -angle);\n        }\n        else {\n            start = new THREE.Vector3().addVectors(this.start.position, this.start.parent.position);\n            end = new THREE.Vector3().addVectors(this.end.position, this.end.parent.position);\n            direction = new THREE.Vector3().subVectors(end, start);\n            length = start.distanceTo(end);\n            this.length = length;\n            this.direction = direction;\n            this.setPosition(start.x, start.y, start.z);\n            this.mesh.rotation.z = 0;\n            this.mesh.scale.set(1, length * 1.15, 1);\n            this.mesh.rotation.z = ((start.x > end.x) ? 1 : -1) * this.mesh.up.angleTo(direction);\n        }\n    }\n}\n\nclass Arg extends GRASPObject {\n    constructor(radius) {\n        let geometry = new THREE.SphereGeometry(radius);\n        let material = new THREE.MeshPhongMaterial({shading: THREE.FlatShading});\n        super(geometry, material);\n        //this.type = 'Arg';\n        this.radius = radius;\n        this.edge = null;\n        this.width = 0;\n        return this;\n    }\n}\n\nclass Input extends Arg {\n    constructor(label, color, radius) {\n        radius = radius || INPUT_RADIUS;\n        super(radius);\n        //this.type = 'Input';\n        color = color || COLORS.white;\n        this.setColor(color);\n        this.label_text = label;\n        this.label = null;\n        this.width = 0;\n        if (label) {\n            this.label = this.add(new Label(label, 2 * radius));\n            this.width = this.label.width;\n        }\n        return this;\n    }\n}\n\nclass Output extends Arg {\n    constructor(radius, color) {\n        radius = radius || OUTPUT_RADIUS;\n        super(radius);\n        //this.type = 'Output';\n        color = color || COLORS.green;\n        this.setColor(color);\n        return this;\n    }\n}\n\nclass Label extends GRASPObject {\n    constructor(name, height) {\n        let text = new Text(name, height - 2, 4.2);\n\n        let w = text.width + height;\n        let h = height || 10;\n        let shape = new THREE.Shape();\n\n        shape.moveTo(0, h / 2);\n        shape.lineTo(w, h / 2);\n        shape.absarc(w, 0, h / 2, 5 * Math.PI / 2.0, 3 * Math.PI / 2.0, true);\n        shape.lineTo(0, - h / 2);\n        shape.lineTo(0, h / 2);\n\n        let settings = {amount: 4.1, bevelEnabled: false, steps: 1};\n        let geometry = new THREE.ExtrudeGeometry( shape, settings );\n\n        geometry.dynamic = true;\n\n        let material = new THREE.MeshPhongMaterial({color: COLORS.blue, shading: THREE.FlatShading});\n        super(geometry, material);\n        this.width = text.width;\n        this.add(text);\n        text.setPosition(w / 2, 0, 0);\n        return this;\n    }\n}\n\nclass Text extends GRASPObject {\n    constructor(text, size, height) {\n        text = text || ' ';\n        size = size || 10;\n        height = height || 6;\n        let geometry = new THREE.TextGeometry(text, {font: \"droid sans mono\", height: height, size: size, style: \"normal\"});\n        geometry.computeBoundingBox();\n        let width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n        geometry.applyMatrix(new THREE.Matrix4().makeTranslation(- width / 2, - size / 2, 0));\n        geometry.dynamic = true;\n        geometry.verticesNeedUpdate = true;\n        let material = new THREE.MeshPhongMaterial({color: COLORS.white, shading: THREE.FlatShading});\n        super(geometry, material);\n        //this.type = 'Text';\n        this.width = width;\n        this.text = text;\n        return this;\n    }\n}\n\nfunction down(x, y) {\n    MOUSE.x = ((x - EDITOR_WIDTH) / (window.innerWidth - EDITOR_WIDTH)) * 2 - 1;\n    MOUSE.y = - ((y - NAVBAR_HEIGHT) / (window.innerHeight - NAVBAR_HEIGHT)) * 2 + 1;\n    SCENE.raycaster.setFromCamera(MOUSE, SCENE.camera);\n    \n    let intersects = SCENE.raycaster.intersectObjects(SCENE.meshes.GRASPObject || []);\n    for (let i = 0; i < intersects.length; i++) {\n        let intersect = intersects[i].object.object;\n        if (intersect.type == 'Scope' || intersect.type == 'Variable' || intersect.type == 'Form') {\n            DRAG_OBJECT = intersect;\n            SCENE.controls.enabled = false;\n            OFFSET.copy(intersects[i].point).sub(DRAG_OBJECT.position);\n            SCENE.container.style.cursor = 'move';\n            break;\n        }\n    }\n}\n\nfunction move(x, y) {\n    MOUSE.x = ((x - EDITOR_WIDTH) / (window.innerWidth - EDITOR_WIDTH)) * 2 - 1;\n    MOUSE.y = - ((y - NAVBAR_HEIGHT) / (window.innerHeight - NAVBAR_HEIGHT)) * 2 + 1;\n    SCENE.raycaster.setFromCamera(MOUSE, SCENE.camera);\n\n    if (DRAG_OBJECT) {\n        let intersects = SCENE.raycaster.intersectObject(DRAG_OBJECT.parent.mesh);\n        if (intersects.length > 0) {\n            let intersect = intersects[0];\n\n            DRAG_OBJECT.mesh.position.copy(intersect.point.sub(OFFSET));\n            DRAG_OBJECT.mesh.position.z = 0;\n            DRAG_OBJECT.updateEdges();\n        }\n        else if (DRAG_OBJECT instanceof Node) {\n            // dragging off the scope\n            intersects = SCENE.raycaster.intersectObject(DRAG_OBJECT.parent.parent.mesh);\n            if (intersects.length > 0) {\n                let intersect = intersects[0];\n\n                DRAG_OBJECT.mesh.position.copy(intersect.point.sub(OFFSET));\n                DRAG_OBJECT.mesh.position.z = 0;\n                x = DRAG_OBJECT.mesh.position.x;\n                y = DRAG_OBJECT.mesh.position.y;\n\n                let top = 0, bottom = 0, right = 0, left = 0;\n                if (x > DRAG_OBJECT.parent.width / 2) right = x - DRAG_OBJECT.parent.width / 2;\n                else if (-x > DRAG_OBJECT.parent.width / 2) left = -x - DRAG_OBJECT.parent.width / 2;\n                if (y > DRAG_OBJECT.parent.height / 2) top = y - DRAG_OBJECT.parent.height / 2;\n                else if (-y > DRAG_OBJECT.parent.height / 2) bottom = -y - DRAG_OBJECT.parent.height / 2;\n\n                OFFSET.x += (right - left) / 2;\n                OFFSET.y += (top - bottom) / 2;\n                DRAG_OBJECT.parent.extend(top, right, bottom, left);\n                DRAG_OBJECT.updateEdges();\n            }\n        }\n    }\n}\n\nfunction up() {\n    if (DRAG_OBJECT) DRAG_OBJECT.drag_coordinates = null;\n    DRAG_OBJECT = null;\n    SCENE.controls.enabled = true;\n    SCENE.container.style.cursor = 'default';\n}\n\nfunction onTouchStart(event) {\n    event.preventDefault();\n    if (event.touches.length == 1) down(event.touches[0].clientX, event.touches[0].clientY);\n}\nfunction onTouchMove(event) {\n    event.preventDefault();\n    if (event.touches.length == 1) move(event.touches[0].clientX, event.touches[0].clientY, true);\n}\nfunction onTouchEnd(event) {\n    event.preventDefault();\n    up();\n}\nfunction onTouchCancel(event) {\n    event.preventDefault();\n    up();\n}\nfunction onMouseDown(event) {\n    event.preventDefault();\n    if (event.buttons == 2) return;\n    down(event.clientX, event.clientY);\n}\nfunction onMouseMove(event){\n    event.preventDefault();\n    move(event.clientX, event.clientY, event.buttons == 1);\n}\nfunction onMouseUp(event) {\n    event.preventDefault();\n    up(event.clientX, event.clientY);\n}\nfunction onMouseScroll(event) {}\n\nfunction updateForces() {\n    let node_constant = 10000;\n    let scope_constant = 100000;\n    let edge_constant = 0.1;\n    let max_force = 100;\n    let min_force = 1;\n    let extension_threshold = 1;\n    if (SCENE.children.Plane) for (let a = 0; a < SCENE.children.Plane.length; a++) {\n        let plane = SCENE.children.Plane[a];\n        if (plane.children.Scope) for (let b = 0; b < plane.children.Scope.length; b++) {\n            let scope = plane.children.Scope[b];\n            let scope_force = new THREE.Vector2(0, 0);\n\n            if (scope.children.Node) for (let c = 0; c < scope.children.Node.length; c++) {\n                let node = scope.children.Node[c];\n                if (node != DRAG_OBJECT) {\n                    // node repellent\n                    let node_force = new THREE.Vector2(0, 0);\n\n                    for (let d = 0; d < scope.children.Node.length; d++) if (c != d) {\n                        let sibling = scope.children.Node[d];\n                        let force = new THREE.Vector2().subVectors(node.position, sibling.position);\n                        let length = force.lengthSq();\n                        if (length < 0.001) force.x = 1;\n                        if (length < 1) length = 1;\n                        force.setLength(node_constant).divideScalar(length);\n                        node_force.add(force);\n                    }\n\n                    // edge spring\n                    if (node.children.Arg) for (let d = 0; d < node.children.Arg.length; d++) {\n                        let arg = node.children.Arg[d];\n                        if (arg.edge && arg.edge.parent == node.parent) {\n                            let sibling_arg = arg.edge.end == arg ? arg.edge.start : arg.edge.end;\n                            let sibling = sibling_arg.parent;\n                            let force = new THREE.Vector2().subVectors(sibling.position.clone().add(sibling_arg.position), node.position.clone().add(arg.position));\n                            node_force.add(force.multiplyScalar(edge_constant));\n                        }\n                    }\n\n                    if (node_force.length() > max_force) node_force.setLength(max_force);\n                    if (node_force.length() > min_force) {\n                        let new_x = node.mesh.position.x + node_force.x;\n                        let new_y = node.mesh.position.y + node_force.y;\n                        let border_x = node.parent.width / 2;\n                        let border_y = node.parent.height / 2;\n\n\n                        if (new_x > border_x) {\n                            // right overflow\n                            let overflow = new_x - border_x;\n                            if (overflow > extension_threshold) {\n                                node.parent.extend(0, overflow, 0, 0);\n                                node.mesh.position.x = new_x;\n                                if (DRAG_OBJECT) OFFSET.x += overflow / 2;\n                            }\n                        }\n                        else if (new_x < -border_x) {\n                            let overflow = -border_x - new_x;\n                            if (overflow > extension_threshold) {\n                                node.parent.extend(0, 0, 0, overflow);\n                                node.mesh.position.x = new_x;\n                                if (DRAG_OBJECT) OFFSET.x -= overflow / 2;\n                            }\n                            // left overflow\n                        }\n                        else node.mesh.position.x = new_x;\n                        if (new_y > border_y) {\n                            // top overflow\n                            let overflow = new_y - border_y;\n                            if (overflow > extension_threshold) {\n                                node.parent.extend(overflow, 0, 0, 0);\n                                node.mesh.position.y = new_y;\n                                if (DRAG_OBJECT) OFFSET.y += overflow / 2;\n                            }\n                        }\n                        else if (new_y < -border_y) {\n                            // bottom overflow\n                            let overflow = -border_y - new_y;\n                            if (overflow > extension_threshold) {\n                                node.parent.extend(0, 0, overflow, 0);\n                                node.mesh.position.y = new_y;\n                                if (DRAG_OBJECT) OFFSET.y -= overflow / 2;\n                            }\n                        }\n                        else node.mesh.position.y = new_y;\n\n                        node.updateEdges();\n                    }\n                }\n            }\n\n            // scope repellent\n            if (scope != DRAG_OBJECT)  for (let c = 0; c < plane.children.Scope.length; c++) if (b != c) {\n                let sibling = plane.children.Scope[c];\n                let force = new THREE.Vector2().subVectors(scope.position, sibling.position);\n                let length = force.lengthSq();\n                if (length < 0.001) force.x = 10;\n                if (length < 10) length = 10;\n                force.setLength(scope_constant).divideScalar(length);\n                scope_force.add(force);\n            }\n\n            if (scope_force.length() > max_force) scope_force.setLength(max_force);\n            if (scope_force.length() > min_force) {\n                scope.mesh.position.x += scope_force.x;\n                scope.mesh.position.y += scope_force.y;\n\n                scope.updateEdges();\n            }\n        }\n    }\n}\n\nfunction render() {\n    updateForces();\n    requestAnimationFrame(render);\n    SCENE.controls.update();\n    SCENE.renderer.render(SCENE.mesh, SCENE.camera);\n}\n\nvar SCENE = new Scene();\n\nrender();\n\nvar PLANE = SCENE.add(new Plane());\nvar SCOPE = PLANE.add(new Scope(0));"]}